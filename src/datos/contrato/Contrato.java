package datos.contrato;

// Generated by MyEclipse Persistence Tools

import java.util.Date;
import java.util.Set;

import datos.contrato_actor.ContratoActor;
import datos.facturero.Facturero;
import datos.inmueble.Inmueble;
import datos.persona.Persona;

/**
 * Contrato generated by MyEclipse Persistence Tools
 */
public class Contrato extends AbstractContrato implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	// Atributos
	
	/** Este atributo lo uso para saber si el contrato que esta por vencer ya fue renovado - NO SE INSTANCIA EN EL CONSTRUCTOR !!! */
	private Boolean yaRenovado;
	
	// Constructors

	/** default constructor */
	public Contrato() {
	}

	/** minimal constructor */
	public Contrato(Integer idContrato, Date fechaAlta) {
		super(idContrato, fechaAlta);
	}

	/** full constructor */
	public Contrato(Integer idContrato, Inmueble inmueble, Facturero facturero, Date fechaDesde,
			Date fechaHasta, Date fechaExtension, Date fechaRescision, String observaciones,
			Double monto, Short cantidadCuota, Double comisionPropPorc,
			Double comisionPropFija, Double comisionInquilino, Date fechaAlta,
			Set<ContratoActor> contratoActors, Boolean comercial) {
		
		super(idContrato, inmueble, facturero, fechaDesde, fechaHasta, fechaExtension, fechaRescision,
				observaciones, monto, cantidadCuota, comisionPropPorc,
				comisionPropFija, comisionInquilino, fechaAlta, contratoActors, comercial);
	}
	
	/**
	 * Evalua si el contrato tiene una extención, en ese caso devuelve dicha fecha
	 * Le agrego que también evalue si tiene fecha de Rescisión (4/5/2013)
	 * @return
	 */
	public Date getFin_contrato() {
		
		Date fecha_fin = this.getFechaHasta();
		
		if (this.getFechaExtension() != null) {
			fecha_fin = this.getFechaExtension();
		}
		
		if (this.getFechaRescision() != null) {
			fecha_fin = this.getFechaRescision();
		}
		
		return fecha_fin;
		
	}
	
	/**
	 * Define como se muestra un Contrato
	 * @return
	 */
//	public String mostrar() {
//		String salida = "";
//		
//		
//		
//		return salida;
//	}

	
	/**
	 * Devuelve el inquilino del Contrato
	 * @author pablo 27-08-2011
	 */
	public Persona getInquilino() {
		Persona oInquilino = null;
		Set<ContratoActor> actores = this.getContratoActors();
		for(ContratoActor oActor: actores) {
			if (oActor.getId().getIdActorTipo() == ContratoActor.ActorTipoInquilino) {
				oInquilino = oActor.getId().getPersona();
			}
		}
		return oInquilino;
	}
	
	public void setYaRenovado(Boolean obj) {
		this.yaRenovado = obj;
	}
	
	public Boolean getYaRenovado() {
		Boolean respuesta = false;
		if (this.yaRenovado != null) {
			respuesta = this.yaRenovado;
		}
		return respuesta;
	}
	
}
